[{"C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\App.js":"1","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\index.js":"2","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\component\\Registration.js":"4","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\component\\Play.js":"5","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\config\\serviceWorker.js":"6","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\config\\firebaseConfig.js":"7","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\component\\Sessions.js":"8","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\component\\FirestoreMessage.js":"9"},{"size":1412,"mtime":1607338841229,"results":"10","hashOfConfig":"11"},{"size":399,"mtime":1607059334191,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3833,"mtime":1607324620622,"results":"14","hashOfConfig":"11"},{"size":1954,"mtime":1607339976740,"results":"15","hashOfConfig":"11"},{"size":409,"mtime":1607059247322,"results":"16","hashOfConfig":"11"},{"size":1258,"mtime":1607063748717,"results":"17","hashOfConfig":"11"},{"size":4009,"mtime":1607340145583,"results":"18","hashOfConfig":"11"},{"size":3246,"mtime":1607319537893,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"o7t0h7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\App.js",["44","45","46","47","48"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Registration from \"./component/Registration\";\r\nimport Sessions from \"./component/Sessions\";\r\n\r\nimport {\r\n  requestFirebaseNotificationPermission,\r\n  auth,\r\n  firestore,\r\n} from \"./config/firebaseConfig\";\r\n\r\nfunction App() {\r\n  const [email, setEmail] = useState();\r\n  const [uid, setUid] = useState();\r\n  const [token, setToken] = useState();\r\n\r\n  // new way\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    isUserLogin();\r\n    getToken();\r\n  }, []);\r\n\r\n  function isUserLogin() {\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        console.log(user);\r\n        setUser(user);\r\n        setUid(user.uid);\r\n        setEmail(user.email);\r\n      } else {\r\n        console.log(\"register logged out\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function getToken() {\r\n    requestFirebaseNotificationPermission()\r\n      .then(firebaseToken => {\r\n        setToken(firebaseToken);\r\n        console.log(\"from state \" + { token });\r\n      })\r\n      .catch(err => {\r\n        return err;\r\n      });\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div>\r\n        <Registration />;\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Sessions uid={uid} email={email} token={token} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\index.js",[],["49","50"],"C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\component\\Registration.js",["51"],"C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\component\\Play.js",[],"C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\config\\serviceWorker.js",[],["52","53"],"C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\config\\firebaseConfig.js",[],["54","55"],"C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\component\\Sessions.js",["56","57","58","59","60","61"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  requestFirebaseNotificationPermission,\r\n  auth,\r\n  firestore,\r\n} from \"../config/firebaseConfig\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport FirestoreMessage from \"./FirestoreMessage\";\r\nimport Play from \"./Play\";\r\n\r\nimport \"../css/style.css\";\r\nimport \"../css/sessions.css\";\r\n\r\nfunction Sessions({ uid, email, token }) {\r\n  const [sessions, setSessions] = useState([]);\r\n  const [sessionorplay, setSessionOrPlay] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getSession() {\r\n      const result = await axios.get(\r\n        \"https://us-central1-bahramasefirebase.cloudfunctions.net/session\"\r\n      );\r\n      console.log(result.data.data);\r\n      setSessions(result.data.data);\r\n      return result;\r\n    }\r\n    getSession();\r\n  }, []);\r\n\r\n  function createSession() {\r\n    async function createSes() {\r\n      const data = {\r\n        owner: uid,\r\n        session: uid,\r\n        ownerDeviceToken: token,\r\n        users: [uid],\r\n        currentUser: uid,\r\n      };\r\n      const result = await axios.post(\r\n        \"https://us-central1-bahramasefirebase.cloudfunctions.net/session/\" +\r\n          uid,\r\n        data\r\n      );\r\n      console.log(result);\r\n    }\r\n    createSes();\r\n    setSessionOrPlay(false);\r\n  }\r\n\r\n  const join = (owner, ownerDeviceToken, uid) => {\r\n    const name = email;\r\n    const message = name + \" Wants to join\";\r\n    firestore.collection(\"notification\").doc(\"ss\").set({\r\n      playerJoinUid: uid,\r\n      owner: owner,\r\n      title: message,\r\n      description: \"To Play Game\",\r\n    });\r\n\r\n    const data = {\r\n      to: ownerDeviceToken,\r\n      collapse_key: \"type_a\",\r\n      notification: {\r\n        body: \"To Play Games\",\r\n        title: message,\r\n      },\r\n    };\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"key=AAAA2JKIkQI:APA91bH0DbfARqpeh6zkEWEwpiKqyVo255lzHxD8qRP3C_vrY4S6oajVuT-uohbfvYo-bIoNqQcVUt11UAabnYgJLy2a6owm2_pA2x71fGQjkFw4aWuZ2tHwcIVmRcbIRWcsX9IMz4Ms\",\r\n    };\r\n\r\n    axios\r\n      .post(\"https://fcm.googleapis.com/fcm/send\", data, {\r\n        headers: headers,\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // Logout\r\n  function logout() {\r\n    auth\r\n      .signOut()\r\n      .then(cred => {\r\n        console.log(\"Logout successful\");\r\n      })\r\n      .catch(error => {\r\n        console.log(\"error logout \" + error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {sessionorplay ? (\r\n        <div className=\"sessionPage\">\r\n          <h2>Session</h2>\r\n          <Button onClick={logout}> Logout </Button>\r\n          <div className=\"col\">\r\n            {sessions.map(session => (\r\n              <div className=\"content\">\r\n                <div className=\"join\">\r\n                  {uid === session.owner ? (\r\n                    <p>Not Join</p>\r\n                  ) : (\r\n                    <button\r\n                      onClick={() =>\r\n                        join(session.owner, session.ownerDeviceToken, uid)\r\n                      }\r\n                      className=\"title\"\r\n                    >\r\n                      Join\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <div className=\"box\">\r\n                  <p className=\"detail\"> {session.owner} </p>\r\n                  <p className=\"detail\">{session.session}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <button onClick={createSession}> New Session </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Play uid={uid} />\r\n          <FirestoreMessage uid={uid} token={token} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sessions;\r\n","C:\\Users\\Admin\\Documents\\project\\ReactProject\\reactbahramase\\src\\component\\FirestoreMessage.js",["62","63","64"],"import React, { useState, useEffect } from \"react\";\r\nimport { firestore, auth } from \"../config/firebaseConfig\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport Modal from \"react-modal\";\r\nimport \"../css/modalstyle.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction FirestoreMessage({ uid, token }) {\r\n  console.log(\"firestoremessage \", token);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [state, setState] = useState({\r\n    title: \"def title\",\r\n    description: \"def description\",\r\n  });\r\n  const [sessionOwner, setSessionOwner] = useState();\r\n  const [playerJoinUid, setPlayerJoinUid] = useState();\r\n\r\n  const modalAccept = async () => {\r\n    deleteNotification();\r\n    setIsOpen(!isOpen);\r\n    const data = {\r\n      uID: playerJoinUid,\r\n    };\r\n    const result = await axios.put(\r\n      \"https://us-central1-bahramasefirebase.cloudfunctions.net/session/add-user/\" +\r\n        sessionOwner,\r\n      data\r\n    );\r\n    console.log(result);\r\n  };\r\n\r\n  function modalCancel() {\r\n    deleteNotification();\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  const deleteNotification = () => {\r\n    firestore\r\n      .collection(\"notification\")\r\n      .doc(\"ss\")\r\n      .delete()\r\n      .then(function () {\r\n        console.log(\"document has been deleted\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  const showNotification = uid => {\r\n    console.log(\"show notification uid \" + uid);\r\n    firestore\r\n      .collection(\"notification\")\r\n      .doc(\"ss\")\r\n      .onSnapshot(function (doc) {\r\n        if (doc.exists) {\r\n          console.log(\"Document data:\", doc.data().title);\r\n          console.log(\"player join uid :\", doc.data().playerJoinUid);\r\n          setPlayerJoinUid(doc.data().playerJoinUid);\r\n          const owner = doc.data().owner;\r\n          setSessionOwner(doc.data().owner);\r\n          console.log(\"owner \" + owner);\r\n          console.log(\"uid \" + uid);\r\n          if (owner === uid) {\r\n            setIsOpen(!isOpen);\r\n            setState(prevState => {\r\n              return {\r\n                title: doc.data().title,\r\n                description: doc.data().description,\r\n              };\r\n            });\r\n          } else {\r\n            console.log(\"You are not owner to show message\");\r\n          }\r\n        } else {\r\n          setState(prevState => {\r\n            return {\r\n              title: prevState.title,\r\n              description: prevState.description,\r\n            };\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const title = state.title;\r\n  const description = state.description;\r\n\r\n  useEffect(() => {\r\n    showNotification(uid);\r\n  }, [uid]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <h4>{uid}</h4>\r\n      <h3>{token}</h3> */}\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={modalAccept}\r\n        contentLabel=\"My dialog\"\r\n        className=\"mymodal\"\r\n        overlayClassName=\"myoverlay\"\r\n        closeTimeoutMS={1}\r\n      >\r\n        <h2>{title}</h2>\r\n        <div className=\"row\">\r\n          <Button onClick={modalCancel}>Cancel</Button>\r\n          <Button onClick={modalAccept}>Accept</Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FirestoreMessage;\r\n",{"ruleId":"65","severity":1,"message":"66","line":2,"column":27,"nodeType":"67","messageId":"68","endLine":2,"endColumn":33},{"ruleId":"65","severity":1,"message":"69","line":2,"column":35,"nodeType":"67","messageId":"68","endLine":2,"endColumn":41},{"ruleId":"65","severity":1,"message":"70","line":2,"column":43,"nodeType":"67","messageId":"68","endLine":2,"endColumn":48},{"ruleId":"65","severity":1,"message":"71","line":11,"column":3,"nodeType":"67","messageId":"68","endLine":11,"endColumn":12},{"ruleId":"72","severity":1,"message":"73","line":25,"column":6,"nodeType":"74","endLine":25,"endColumn":8,"suggestions":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"65","severity":1,"message":"80","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"76","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"65","severity":1,"message":"85","line":3,"column":3,"nodeType":"67","messageId":"68","endLine":3,"endColumn":40},{"ruleId":"65","severity":1,"message":"66","line":8,"column":27,"nodeType":"67","messageId":"68","endLine":8,"endColumn":33},{"ruleId":"65","severity":1,"message":"69","line":8,"column":35,"nodeType":"67","messageId":"68","endLine":8,"endColumn":41},{"ruleId":"65","severity":1,"message":"70","line":8,"column":43,"nodeType":"67","messageId":"68","endLine":8,"endColumn":48},{"ruleId":"65","severity":1,"message":"86","line":10,"column":8,"nodeType":"67","messageId":"68","endLine":10,"endColumn":11},{"ruleId":"65","severity":1,"message":"87","line":11,"column":8,"nodeType":"67","messageId":"68","endLine":11,"endColumn":17},{"ruleId":"65","severity":1,"message":"88","line":2,"column":21,"nodeType":"67","messageId":"68","endLine":2,"endColumn":25},{"ruleId":"65","severity":1,"message":"89","line":90,"column":9,"nodeType":"67","messageId":"68","endLine":90,"endColumn":20},{"ruleId":"72","severity":1,"message":"90","line":94,"column":6,"nodeType":"74","endLine":94,"endColumn":11,"suggestions":"91"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'firestore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'useEffect' is defined but never used.",["93"],["94"],["93"],["94"],"'requestFirebaseNotificationPermission' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'auth' is defined but never used.","'description' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showNotification'. Either include it or remove the dependency array.",["95"],{"desc":"96","fix":"97"},"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [getToken]",{"range":"100","text":"101"},"Update the dependencies array to be: [showNotification, uid]",{"range":"102","text":"103"},[621,623],"[getToken]",[2683,2688],"[showNotification, uid]"]